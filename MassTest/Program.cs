using System;                               // Подключение пространства имён

namespace MassTest                          // Объявление нового пространства имён
{
    class Program                           // Объявление нового класса
    {
        static void Main()                  // Объявление нового метода 
        {
            SortWithGraphics();
            Sort();         // Вызов методов
        }                                    // Конец объявления метода Main

        /// <summary>
        /// Перебор элементов массива
        /// </summary>
        /// <remarks>
        /// Вывод элементов массива с форматированием в определённом виде 
        /// </remarks>
        /// <returns>
        /// Вывод на консоль массив элементов
        /// </returns>
        static void SortWithGraphics()       // Объявление метода
        {   
            // Инициализируем массив со значениями
            int[,,] mas = { { { 1, 2 }, { 3, 4 }, { 4, 5 }, { 6, 7 }, { 7, 8 }, { 9, 10 }, { 10, 11 }, { 12, 13 } } };
            // Инициализируем переменную содержащую колличество строк в массиве
            int rows = mas.GetUpperBound(0);    //0
            // Инициализуруем переменную содержащую длинну массива 
            int columns = mas.GetUpperBound(1); //7
            // Инициализируем переменную содержащую колличество слоёв массива
            int layer = mas.GetUpperBound(2);   //1
            // Вывод на экран информации о массиве
            Console.WriteLine($"Строк: {rows + 1}, элементов в строке {columns + 1}, ширина {layer + 1}");
            // Выводим на экран содержимое массива
            // Запускаем цикл что перебирает все значения подряд в массиве и присваивает их переменной number 
            foreach (int number in mas)
            {
                // Выводим на экран текущее содержимое переменной number
                Console.Write($"{number} ");
            }
            Console.WriteLine();
            // Элемент форматирования
            Console.Write("{");
            // Объявление цикла перебора строк
            for (int i = 0; i <= rows; i++)
            {
                Console.Write("{");
                // Объявление вложенного цикла перебора значений цикла
                for (int j = 0; j <= columns; j++)
                {
                    Console.Write("{");
                    // Объявление вложенного цикла перебора слоёв
                    for (int k = 0; k <= layer; k++)
                    {
                        // Вывод на экран содержимое массива
                        Console.Write($"{mas[i, j, k]}");
                        // Элемент форматирования
                        if (k < layer)
                            Console.Write(" , ");
                    }
                    // Элемент форматирования
                    Console.Write("}");
                    if (j < columns)
                        Console.Write(" , ");
                }
                // Элемент форматирования
                Console.Write("}");
                if (i < rows)
                    Console.Write(" , ");
            }
            // Элемент форматирования
            Console.Write("}");
            Console.WriteLine();
        }                                       // Конец объявления метода SortWithGraphics

        /// <summary>
        /// Сортировка пузырьком
        /// </summary>
        /// <remarks>
        /// Первый элемент массива, сравниваем со вторым элементом массива. Если первое значени больше второго, меняем их местами
        /// </remarks>
        /// <returns>
        /// Вывод на экран отсортированного массива в порядке возрастания 
        /// </returns>
        static void Sort()                      // Объявление нового метода
        {
            // Создаём массив
            int[] nums = new int[7];
            // Уведомляем пользователя что нужно ввести 7 чисел
            Console.WriteLine("Введите 7 чисел");
            // Запускаем цикл
            // Цикл будет повторяться пока пользователь не введет все значения
            for (int i = 0; i < nums.Length; i++)
            {
                // Просим пользователя присвоить текущему элементу массива значение
                Console.Write($"{i} число: ");
                // Считываем ответ и записываем его в массив под текущим номером элемента
                nums[i] = Int32.Parse(Console.ReadLine());
                // Цикл будет выполнен 7 раз
            }
            // Выводим на экран текущее содержимое массива 
            Console.WriteLine("Вывод исходного массива массива");
            foreach (int numbers in nums)
            {
                Console.Write($"{numbers}\t");
            }
            Console.WriteLine();
            // Создаём временную переменную для замены значений массива
            int temp;
            // Запускаем цикл
            // Перебираем значения всех переменных в массиве с 1 позиции
            for (int i = 0; i<nums.Length-1;i++)
            {
                // Объявляем вложенный цикл для перебора значений со второй позиции
                for (int j = i+1; j<nums.Length;j++)
                {
                    // Проверка на условие
                    // Если значение в 1 позиции больше чем во второй позиции
                    if (nums[i]>nums[j])
                    {
                        // Временная переменная получает значение первой позиции
                        temp = nums[i];
                        // Первая позиция получает значение второй позиции
                        nums[i] = nums[j];
                        // Вторая позиция получает значение первой позиции хранящейся во временнной переменной
                        nums[j] = temp;
                    }
                }
            }
            // Выводим на экран отсортированное содержимое массива
            Console.WriteLine("Вывод отсортированного массива");
            // Запускаем цикл что перебирает все значения подряд в массиве и присваивает их переменной numbers 
            foreach (int numbers in nums)
            {
                // Выводим на экран текущее содержимое переменной numbers
                Console.Write($"{numbers}\t");
            }
        }                                           // Конец объявления метода Sort
    }                                               // Конец объявления класса Program
}                                                   // Конец объявления пространства имён
